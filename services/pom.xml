<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.pacbad</groupId>
	<artifactId>pacbad-services</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Les propriétés suivantes seront mises dans le fichier build-info.properties 
			dans le jar (avec le plugin de build ci-dessus). -->
		<!-- Ces propriétés sont connues quand le build est fait par la PIC (Jenkins). -->
		<build.number>${env.BUILD_NUMBER}</build.number>
		<build.id>${env.BUILD_ID}</build.id>
		<build.url>${env.BUILD_URL}</build.url>
		<build.jobName>${env.JOB_NAME}</build.jobName>
		<build.tag>${env.BUILD_TAG}</build.tag>
		<build.svnRevision>${env.SVN_REVISION}</build.svnRevision>
		<build.svnUrl>${env.SVN_URL}</build.svnUrl>

		<!-- Pour les propriétés suivantes, ce qui importe c'est les propriétés 
			du module courant qui contient les infos globales sur le build. -->
		<build.projectGroupId>${project.groupId}</build.projectGroupId>
		<build.projectArtifactId>${project.artifactId}</build.projectArtifactId>
		<build.projectVersion>${project.version}</build.projectVersion>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.26-b09</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>2.26-b09</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.26-b09</version>
		</dependency>


		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1-m09</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Sécurité avec JWT -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.7.0</version>
		</dependency>

		<!-- Persistence -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.11.Final</version>
		</dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>5.2.11.Final</version>
    </dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.4.0</version>
			<!-- Dépendance utilisée pour le moment pour le déploiement avec Jetty -->
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.8.47</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<!-- <resources> -->
		<!-- <resource> -->
		<!-- <directory>src/main/webapp/</directory> -->
		<!-- </resource> -->
		<!-- </resources> -->

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.outputDirectory}/build-info.properties</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Pour lancer l'application en local avec Jetty : mvn jetty:run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.6.v20170531</version>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>2.4.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.20</version>
			</plugin>
		</plugins>
	</reporting>
</project>